apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: monitoring
spec:
  storageClassName: "managed-csi"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch

- nonResourceURLs:
  - /metrics
  verbs:
  - get

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus

roleRef:
  name: prometheus
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole

subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
  namespace: monitoring
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: ${ASB_AKS_NAME}
    scrape_configs:
      - job_name: 'ngsa-memory'
        metrics_path: /metrics
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - ngsa
          selectors:
            - role: "pod"
              label: "app=ngsa-memory"
              field: "status.phase=Running"
        relabel_configs:
        - source_labels: [ __meta_kubernetes_pod_name ]
          action: replace
          target_label: instance
      - job_name: 'ngsa-cosmos'
        metrics_path: /metrics
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - ngsa
          selectors:
            - role: "pod"
              label: "app=ngsa-cosmos"
              field: "status.phase=Running"
        relabel_configs:
        - source_labels: [ __meta_kubernetes_pod_name ]
          action: replace
          target_label: instance
      - job_name: 'ngsa-java'
        metrics_path: /metrics
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - ngsa
          selectors:
            - role: "pod"
              label: "app=ngsa-java"
              field: "status.phase=Running"
        relabel_configs:
        - source_labels: [ __meta_kubernetes_pod_name ]
          action: replace
          target_label: instance
      - job_name: 'loderunner-commandmode'
        metrics_path: /metrics
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - loderunner
          selectors:
            - role: "pod"
              label: "app=loderunner"
              field: "status.phase=Running"
        relabel_configs:
        - source_labels: [ __meta_kubernetes_pod_name ]
          action: replace
          target_label: instance
      - job_name: 'fluentbit'
        metrics_path: /api/v1/metrics/prometheus
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - fluentbit
          selectors:
            - role: "pod"
              label: "app.kubernetes.io/name=fluentbit"
              field: "status.phase=Running"
        relabel_configs:
        - source_labels: [ __meta_kubernetes_pod_name ]
          action: replace
          target_label: instance

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
  labels:
    app: prometheus-server
  annotations:
    checkov.io/skip1: CKV_K8S_38=Need service account token for Prometheus
    checkov.io/skip2: CKV_K8S_22=Prometheus needs write access
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: ${ASB_ACR_NAME}.azurecr.io/prom/prometheus:v2.30.0
          imagePullPolicy: Always
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
            - "--storage.tsdb.retention.size=3900MB"
            - "--storage.tsdb.retention.time=7d"
            - "--storage.tsdb.min-block-duration=2h"
            - "--storage.tsdb.max-block-duration=2h"
            - "--web.enable-lifecycle"
            - "--web.enable-admin-api"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
          resources:
            limits:
              memory: "512Mi"
              cpu: "1000m"
            requests:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 9090
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 9090
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - name: thanos
          image: ${ASB_ACR_NAME}.azurecr.io/thanos/thanos:v0.23.0
          args:
            - "sidecar"
            - "--log.level=debug"
            - "--tsdb.path=/prometheus/"
            - "--prometheus.url=http://localhost:9090"
            - "--objstore.config-file=/etc/secret/thanos-storage-config.yaml"
            - "--reloader.config-file=/etc/prometheus/prometheus.yml"
          env:
            - name : THANOS_OBJSTORE_CONFIG
              value: /etc/secret/thanos-storage-config.yaml
          ports:
            - name: http-sidecar
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          livenessProbe:
              httpGet:
                port: 10902
                path: /-/healthy
          readinessProbe:
            httpGet:
              port: 10902
              path: /-/ready
          volumeMounts:
            - name: prometheus-storage-volume
              mountPath: /prometheus
            - name: prometheus-config-volume
              mountPath: /etc/prometheus
            - name: thanos-objstore-config
              mountPath: /etc/secret
              readOnly: false
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
        - name: prometheus-storage-volume
          persistentVolumeClaim:
            claimName: prometheus-pvc
        - name: prometheus-config-shared
          emptyDir: {}
        - name: thanos-objstore-config
          secret:
            secretName: thanos-objstore-config

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus-server
  namespace: monitoring
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9090'
spec:
  selector:
    app: prometheus-server
  type: ClusterIP
  ports:
    - name: prometheus-server
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: grpc
      port: 10901
      targetPort: 10901
    - name: http-sidecar
      port: 10902
      targetPort: 10902

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: prometheus-vs
  namespace: monitoring
spec:
  gateways:
  - istio-system/istio-gateway
  hosts:
  - prometheus-${ASB_DOMAIN_SUFFIX}
  http:
  - match:
      port: 10901
    route:
    - destination:
        port:
          number: 10901
        host: prometheus-server
