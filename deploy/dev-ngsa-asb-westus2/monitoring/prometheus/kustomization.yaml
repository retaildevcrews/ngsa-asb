apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
- ../../../base/apps/monitoring/prometheus
patches:
- patch: |
    - op: replace
      path: "/spec/template/spec/containers/0/env/0/value"
      value: "aks-3i2qzkkxofr7c-westus2"
    - op: replace
      path: "/spec/template/spec/containers/0/image"
      value: "acraks3i2qzkkxofr7c.azurecr.io/prom/prometheus:v2.30.0"
    - op: add
      path: "/spec/template/spec/containers/-"
      value:
        name: thanos
        image: acraks3i2qzkkxofr7c.azurecr.io/thanos/thanos:v0.23.0
        imagePullPolicy: Always
        args:
          - "sidecar"
          - "--log.level=debug"
          - "--tsdb.path=/prometheus/"
          - "--prometheus.url=http://localhost:9090"
          - "--objstore.config-file=/etc/secret/thanos-storage-config.yaml"
          - "--reloader.config-file=/etc/prometheus/prometheus.yml"
        env:
          - name : THANOS_OBJSTORE_CONFIG
            value: /etc/secret/thanos-storage-config.yaml
        ports:
          - name: http-sidecar
            containerPort: 10902
          - name: grpc
            containerPort: 10901
        resources:
          requests:
            cpu: '100m'
            memory: '64Mi'
          limits:
            cpu: '250m'
            memory: '256Mi'
        livenessProbe:
            httpGet:
              port: 10902
              path: /-/healthy
        readinessProbe:
          httpGet:
            port: 10902
            path: /-/ready
        volumeMounts:
          - name: prometheus-storage-volume
            mountPath: /prometheus
          - name: prometheus-config-volume
            mountPath: /etc/prometheus
          - name: thanos-objstore-config
            mountPath: /etc/secret
            readOnly: false
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
  target:
    group: apps
    version: v1
    kind: Deployment
    name: prometheus-deployment
    namespace: monitoring
